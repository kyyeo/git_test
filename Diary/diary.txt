Note: This is a diary of learnings from The Odin Project.
In this first entry on 16 July 2021, I am practicing how to write to a text file and subsequently push it to GitHub.

With this next entry, I understand that to discard changes that have not yet been committed, utilise the "git restore <file>" or "git reset --hard" for all files.
Furthermore, I learn that "git commit" still remains in my local directory. Meaning it requires a push to GitHub.
The next learning is how to append, rather than overwrite, input to a text file using double carets (vs a single caret >). 
To write to a textfile, one would use "cat > <file>" or "
"cat >> <file>".
Fri 16 Jul 2021 06:42:00 PM +08
Use date >> diary.txt to append the date to the diary!
Use echo command to echo input to the text file
to escape quotes in shell, start the sentence with a $' sign. The forward slash single quote is also an escape.
Fri 16 Jul 2021 06:47:05 PM +08

A few days has elapsed from the last practice. Knowledge of commands are no longer on my fingertips.
Sun 25 Jul 2021 04:23:06 PM +08
testing echo
use echo "<text>" >> <filename> to echo text
some Git revision. 
git remove -v to find out which folder is connected to git
git status to determine what files have not been staged
git add <filename> to stage the file
git commit -m "text" to commit the changes with a message
git log to review the commits
git add . adds all files
git push origin main to upload work to GitHub repo
git reset helps to revert changes if a file has been erroneously modified
when using "cat >> diary.txt", CTRL+D to end input.
use a hyphen as a word separator, as opposed to undercsore, as Google treats hyphen as a word separator.
a point of learning: name your folderse in lowercase, as it makes CLI navigation much easier. 
in terms of HTML, if a target file is in the same directory as the invoking html file, then use the filename directly. 
otherwise, write the directory name as part of the path with a forward slash, followed by the filename!
if the target file is in a directory above where index.html resides, then use ../
Sun 25 Jul 2021 11:37:56 PM +08
 
put together a basic html page
Tue 27 Jul 2021 10:24:34 PM +08
another day, another CSS

CSS is a style sheet language!
in CSS, it's important to recognise a RULESET, which comprises the SELECTOR, DECLARATION (property and value)
Curly braces, colon, and semicolons are the 3 most important symbols. 
The basic understanding uses an ELEMENT SELECTOR (i.e. p for <p>)
There are also the ID, CLASS, ATTRIBUTE, and PSEUDO-CLASS selectors!
The difference bewteen an ID and CLASS selector is that an ID selector is unique on a given HTML page, while a CLASS selector can have multiple instances.
Perhaps most interesting for now is when an element can be selected during a specific state (e.g. cursor hovering).
And obviously, there are many more selectors to learn. 
interesting to learn that <link> is for an EXTERNAL resource, such as Google Fonts. 
Although it is commonly for the CSS stylesheet in another local directory, it can also link to externally.

CSS is about the box model: padding, border, margin
The values set top, right, bottom, left
When you set two values on a property like margin or padding, the first value affects the element's top and bottom side
the second value affects the left and right side.
width, style and color 
Unsure about the differences between BLOCK and INLINE elements. Though it seems that BLOCK means taking up space (i.e. respected), while INLINE means its margin is ignored. 
 
On to JavaScript.
As opposed to <link>, which is placed between the <head>, <script> has been placed just before the closing </body> tag.
This is to due to script loading strategies. There are alternative approaches. 

Thu 29 Jul 2021 10:36:50 PM +08
JavaScript is case sensitive!
There is a difference between var and let to declare variables
There are various data types like String, Number, Boolean, Array, or even Object.
Comment in JavaScript using /* and */
Or even //
learnt some javascript
whoopie

Sat 31 Jul 2021 10:34:39 PM +08
started on freecodecamp's Responsive web design course
completed basic HTML on FCC!
Sun 01 Aug 2021 01:26:05 PM +08
started on basic CSS on FCC
a CSS class is a reusable style!
CSS fonts can "degrade"
Multiple CSS classes can be applied to a HTML element through the Class attribute, and applying a space between class names!
CSS borders have properties such as style, color and width.
border-radius property of a CSS border can be in px or % value; 50% rounds the image!
it is considered best practice for ID attributes to be unique!
ID is more important than a CLASS (higher specificity), meaning ID is applied first
Remember that ID and CLASS are known as "CSS Selectors"
To apply CSS, either STYLE, CLASS, or ID can be used. 

Remember that STYLE is applied within the respective HTML element (e.g. <p style="...">)
inline style is more important than id, and id is more important than class declarations
But more critically, there is one better way to override other CSS: !important
This is used beside the actual style to be kept (e.g. color: pink !important;)

CSS padding goes clockwise, beginning from the top (i.e. Clockwise notation)
CSS margin applies the same principle as CSS padding values^
Know that there are other CSS selectors available such as [attr=value]
There is a difference between ABSOLUTE (px/in/mm) and RELATIVE (em/rem) units of measurement
The ORDER of class declarations in the <style> section determines importance; SECOND declaration takes precedence over the first declaration!
Realise that the class ATTRIBUTE of a HTML element can contain multiple values

hex (or hexadecimal) code are base 16 numbers (vs decimals which are base 10 numbers with symbols from 0 to 9)
in hex, 0 to 9 remain, but ABCDEF continue the numbering from 10 to 15. Thus, there are 16 "numbers".
hex colors are segmented for Red, Green, and Blue (RGB)
hex codes are 6 hexadecimal digits.
Know that hex codes can be shortened (#FF0000 is the same as #F00)

colours can also be represented using rgb(0,0,0) notation.
the maximum value for R/G/B is 255
this can be remembered from hex notation where F x F is the equivalent of 16*16 = 256

a CSS variable (e.g. --penguin-skin) can be created within CSS classes.
var(--penguin-skin) can then be referenced as a CSS property value
fallbacks can be employed, so that an alternative value is used if the variable is invalid
there is a :root pseudo-class selector in CSS, which matches the root element of the document, usually HTML
CSS variables are typically declared there, as INHERITANCE means that the variable is usable globally, and accessed from any other selector in the style sheet.

browser fallbacks and compatibility
e.g. IE does not support CSS variables
to do so, one can rely on the order of precedence in CSS (i.e. browsers read CSS from top-bottom)

MEDIA QUERIES are a technique in CSS3 which introduces a rule when conditions are true
it is useful for handling differing media devices (e.g. screen size)
a BREAKPOINT, when met, will then change behaviour 
e.g. @media (max-width: 768px) { ... }

3 CSS frameworks for reset: Timothy framework, Blueprint, and Yahoo 
HTML5 semantic elements clearly describe their meaning to both the developer and browser (e.g. form, table, article, header, footer)
@import url("reset.css");  useful command to import the reset CSS sheet, which can be saved in the same folder as index.html
the purpose of a CSS RESET is to remove any unwanted styles that have been applied by the browser, in default.
A browser can have default font size and font family, for example. 
Useful website to use for resets is CSSRESET.com

Mon 02 Aug 2021 10:15:47 PM +08
rgba() is contains a field for alpha/level of opacity, which ranges from 1 to 0
box-shadow adds one or more shadows to an element
<hr> adds a horizontal line across the width of its containing element!
line-height property adjusts the spacing between lines of text
pseudo-class is added to selectors, in order to select a specific state of the element
BLOCK level items start on a new line, while INLINE elements sit within surrounding content (e.g. images or spans).
Think of the CSS BOX MODEL
POSITION property overrides the NORMAL flow of a document.
an ABSOLUTE position removes the element from the normal flow. 
the OFFSET properties (i.e. top, bottom, left, and right) are then used to shift the element
one other layout scheme is the FIXED position, which locks the element relative to the browser window
note that a fixed position element will not move when the user scrolls
position: absolute | relative | fixed | sticky

FLOAT is a positioning tool, which removes the element from the normal flow, and pushes the element to the LEFT or RIGHT of their containing parent element. 
float is commonly used in conjunction with width property
when elements are stacked, the Z INDEX determines how elements are ordered. 
the z index is an integer, and higher values are higher in the stack.
the DISPLAY property can be used to set an element as block or inline.

colour theory and the colour wheel
opposite colours are COMPLEMENTARY; if combined, they cancel and create a grey. but beside each other, create strong visual contrast. 
e.g. red (#FF0000) and cyan (#00FFFF)
e.g. green(#00FF00) and magenta (#FF00FF)
e.g. blue (#0000FF) and yellow (#FFFF00)

RGB are primary colours. 
green and blue give CYAN, as a secondary colour
red and blue give MAGENTA, as a secondary colour
red and green give YELLOW, as a secondary colour
these secondary colours are complements to the unused primary colour!

tertiary colours combine a primary colour with its secondary colour neighbour. 
e.g. red and yellow give orange
 
split-complementary color scheme starts with a base colour, then pairs it with 2 other adjacent colours to its complement.
In practice, one of the colors is usually dominant and the complement is used to bring visual attention to certain content on the page.

HSL() stands for Hue, Saturation, and Lightness. 
hsl is an alternative way to pick a colour
hue ranges from 0 to 360, and refers to the actual coluoration
saturation of 100% is fully saturated, and refers to the amount of grey
lightness of 50% is normal (0% for black, 100% for white)
the TONE of a colour can be adjusted by playing with Saturation and Lightness

Tue 03 Aug 2021 03:28:38 PM +08
know that a PROPERTY can have different FUNCTIONS
e.g. in the BACKGROUND property, there is the LINEAR-GRADIENT function

don't fully understand the intuition behind REPEATING-LINEAR-GRADIENT function

utilise the URL() function as part of the BACKGROUND property to add texture with an image
remember about how elements have STATES, which can be used to add CSS rules (e.g. div:hover)
skewX and skewY are functions part of TRANSFORM property to skew the element

do NOT understand how to use ::before and ::after pseudo-elements

Wed 04 Aug 2021 08:56:23 PM +08
@keyframes is a rule to control what happens during an animation. there are a total of 8 animations.
animation-name names the animation. the name is used in conjunction with @keyframes to control each frame's (i.e. percentage) behaviour.
animation-duration sets the animation length of time.
@keyframes uses percentages to determines what happens over the duration
typically, an ID (or class) is used to set the animation's properties (e.g. name, or duration etc)
finally, the ID is applied to a HTML element


Thu 05 Aug 2021 10:00:01 PM +08
animation-fill-mode property as 'forwards' prevents the animation from reverting back to its original state
leverage the POSITION property to move elements around (i.e. top right left right)
animation-iteration-count controls the number of loops (e.g. infinite)
animation-timing-function control the speed of the animation (e.g. ease, ease-out, ease-in, linear etc)

cubic-bezier function (p0, p1, p2, and p3). 
The shape of the curve represents how the animation plays out (x, y) coordinates. 
The X-axis of this coordinate system is the duration of the animation (think of it as a time scale), and the Y-axis is the change in the animation.
p0 stands for (0, 0)
p3 stands for (1, 1)
animation-timing-function: cubic-bezier(x1, y1, x2, y2)
Although the cubic Bezier curve is mapped on a 1 by 1 coordinate system, and it can only accept x values from 0 to 1, the y value can be set to numbers larger than one.
DO NOT UNDERSTAND BEZIER FUNCTION AT ALL



Mon 16 Aug 2021 04:53:13 PM +08
Each page should always have one (and only one) h1 element, which is the main subject of your content. 
The main element is used to wrap (you guessed it) the main content, and there should be only one per page. 
The main tag also has an embedded landmark feature that assistive technology can use to navigate to the main content quickly.
article is a sectioning element and is used to wrap independent, self-contained content. 
section element is also new with HTML5
An article is for standalone content, and a section is for grouping thematically related content
When there's no relationship between groups of content, then use a div.
<div> - groups content 
<section> - groups related content 
<article> - groups independent, self-contained content

header shares the embedded landmark feature with main, allowing assistive technologies to quickly navigate to that content.
header tag is used to wrap introductory information or navigation links for its parent tag and works well around content that's repeated at the top on multiple pages.
header is meant for use in the body tag

nav element is another HTML5 item with the embedded landmark feature
nav is meant to wrap around the main navigation links in your page

footer element has a built-in landmark feature
primarily used to contain copyright information or links to related documents

audio element gives semantic meaning when it wraps sound or audio stream content
needs a text alternative
audio tag supports the CONTROLS attribute (is a boolean attribute)

figure element and the related figcaption wrap a visual representation
For data visualizations like charts, the caption can be used to briefly note the trends or conclusions for users

label tag wraps the text for a specific form control item, usually the name or label for a choice
for attribute on a label tag explicitly associates that label with the form control
fieldset tag surrounds the entire grouping of radio buttons
a legend tag to provide a description for the grouping

time element along with a datetime attribute to standardise times 
SUP tags stand for superscript text

an alternative website presentation can be applied for accessibility
for example, CSS can be used to position the screen reader-only elements off the visual area of the browser window
important to realise that 0px values REMOVES an element from a document's flow. meaning readers will ignore it
display: none and visibility: hidden also removes the element, instead of shifting off screen

Web Content Accessibility Guidelines (WCAG) recommend at least a 4.5 to 1 contrast ratio for normal text

Colour cannot be the only way to convey importance. Colourblindness must also be taken into account.
contrast ratio is calculated using the relative luminance (or lightness) values of the foreground and background colors.
In practice, the 4.5:1 contrast ratio can be reached by shading (adding black to) the darker color and tinting (adding white to) the lighter color. 
Think about 'close colours' on the colour wheel and its impact to colour blind folk
e.g. yellow and green are neighbouring hues, and almost virtually indistinguishable

to only hear the links available on a page.Screen readers do this by reading the link text, or what's between the anchor (a) tags.
so instead of 'Click Here', wrap the <a> anchor tags around more meaningful, and descriptive text like 'information about drugs'

ACCESSKEY attribute specifies a shortcut key to activate or bring focus to an element.
HTML5 allows this attribute to be used on any element, but it's particularly useful when it's used with interactive ones like buttons, links, and form controls.
for example, a user can then click 'c' to activate a link

tabindex attribute has three distinct functions (positive, negative, or zero)
tabindex relates to an element's keyboard focus
for example, when tabbing through a website, attention can be drawn to a particular <p> tag

the specific tab order can be set using positive numbers of 1 or higher
note that doing so overrides the default HTML source order, which begins from the top of the page

Media Queries are new in CSS3 and changes how content is presented with different viewport sizes
A viewport is a user's visible area of a web page, and is different depending on the device used to access the site.
Media Queries consist of a media type, and if that media type matches the type of device the document is displayed on, the styles are applied. 
for example, if the device width is LESS than or equal to 100px. this is achieved with MAX-width
another example would be if device height is MORE than or equal to 350px, which is achieved with MIN-height


Tue 17 Aug 2021 09:40:43 PM +08
for images to be responsive, set MAX-WIDTH and HEIGHT to 100% and auto respectively
for example, in a CSS class, set the above properties and apply the style to HTML elements

to deal with a retina display, half the width and height of an image

for responsive TYPOGRAPHY, use viewport instead of em or px
VIEWPORT units such as vw, vh, vmin, and vmax are relative to the viewport dimensions of a device.
don't fully understand how to apply VMIN and VMAX

CSS flexbox positions elements in a flexible way
for example, display: flex turns an element into a flex container, making it possible to align any children of that element into rows or columns. 
recall that CSS selectors select HTML elements based on name, id or class
flex-direction property (default value is row) can set a parent item to row (column), and aligns the children horizontally (vertically)

see image in https://www.w3.org/TR/css-flexbox-1/images/flex-direction-terms.svg for a good reference about flexbox

the direction the flex items are arranged is called the main axis. 
For a row, this is a horizontal line that cuts through each item. And for a column, the main axis is a vertical line through the items.
to space the flex items, 
justify-content value can be center, flex-start, flex-end, space-between,space-around, or space-evenly

For rows, the cross axis is vertical and for columns, the cross axis is horizontal.
align-items property to align flex items along the cross axis
align-items value can be flex-start, flex-end, center, stretch, or baseline

flex-wrap property tells CSS to wrap items. This means extra items move into a new row or column.
The break point of where the wrapping happens depends on the size of the items and the size of the container.
values of nowrap, wrap, or warp-reverse
for e.g. if the width is 25%, then there are 4 items before wrapping!
 
flex-shrink when the width of the parent container is smaller than the combined widths of all the flex items within it.
flex-shrink property takes numbers as values. The higher the number, the more it will shrink compared to the other items in the container

flex-grow property controls the size of items when the parent container expands.

flex-basis property specifies the initial size 

simply use flex to set grow, shirnk and basis property values
default property settings are flex: 0 1 auto
For example, flex: 1 0 10px;
don't fully understand how flex grow/shrink/basis are to be used

order property is used to tell CSS the order of how flex items appear 
By default, items will appear in the same order they come in the source HTML

align-self property allows you to adjust each item's alignment individually
 other common adjustment techniques using the CSS properties float, clear, and vertical-align do NOT work on flex items


Wed 18 Aug 2021 11:15:18 PM +08
learning about CSS GRID
    display: grid;
need to define the structure of the grid
	grid-template-columns: 100px 100px 100px
for example, above creates 3 columns of 100px each
similarly with grid-template-rows: 50px 50px;

absolute and relative units like px and em can also be used. even FR, AUTO, and % can be used
fr: sets the column or row to a fraction of the available space, think about it like divvying up the remaining space
auto: sets the column or row to the width or height of its content automatically,
%: adjusts the column or row to the percent width of its container.
for eg, grid-template-columns: auto 50px 10% 2fr 1fr;
The first column is as wide as its content, 
the second column is 50px, 
the third column is 10% of its container, 
and for the last two columns; 
the remaining space is divided into three sections, 
two are allocated for the fourth column, 
and one for the fifth.
however, think about how inefficient it would be if the grid was 100x100

grid-column-gap, or grid-row-gap, properties to add gaps between columns/rows
grid-gap is shorthand. if there is only 1 value, then the gap is consistently applied to both columns and rows
if there are 2 values, then the first value is used for rows, while the second is for columns

in a grid, an item's grid-column property helps control the number of columns to consume
think of a 3x3 grid with 4 lines along the rows and columns, which help demarcate start and finish points of the box
for eg, grid-column: 1 / 3; then dictates that the element starts from the 1st column line (out of 4), and extends up till the 3rd column line (out of 4)
grid-row acts similarly, but for rows instead

justify-self to adjust the content of the call HORIZONTALLY using values: stretch (default), start, center, end
align-self to adjust the contents VERTICALLY
by applying "justify-items" or "align-items" to the grid container, alignment is applied to ALL items, which is convenient

an AREA of the grid can have a custom name too using grid-template-areas
Every word represents a cell and every pair of quotation marks represent a row.



Fri 27 Aug 2021 02:55:07 PM +08

Mon 30 Aug 2021 03:47:49 PM +08
GRID-AREA property allows one to place items in the custom area through naming
it works by referencing the GRID-TEMPLATE-AREAS that had been previously named
grid-area can also be used without a template; by referencing the start/start/end/end lines of the grid (recall 3x3 has lines 1 through 4 for both vertical and horizontal axes)

to improve the efficiency of using grid-template-columns/rows, the REPEAT function will help
e.g. grid-template-rows: repeat(100, 50px);

MINMAX is a function which limits item sizes, as the grid container changes size
minmax defines the minimum, before the maximum sizes
e.g. minmax(50px, 200px);
minmax function can also be part of a repeat function

The repeat function comes with an option called AUTO-FILL
this inserts as many rows/columns for the desired container size
If your container can't fit all your items on one row, it will move them down to a new one.
e.g. grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));

the AUTO-FIT option works similarly to auto-fill
auto-FILL inserts empty rows/columns whenever the container's size exceeds the size of all items combined
auto-FIT collapses those empty rows or columns and stretches your items to fit the size of the container


Mon 30 Aug 2021 06:42:43 PM +08
Fri 10 Sep 2021 11:11:06 AM +08
create codepen for Tribute and Survey pages!

Mon 13 Sep 2021 10:30:13 PM +08
TOP's HTML and CSS topics have been updated
moved away from FreeCodeCamp material
web servers will, by default look for an index.html page when users land on our websites
The <head> element is where we put important meta-information about our webpages and stuff required for our webpages to render correctly 
Charset Meta Element; Setting the encoding is very important because it ensures that the webpage will display special symbols and characters from different languages correctly
Unicode is the industry standard used for the consistency of character encoding. 
UTF-8 stands for Unicode Transformation Format 8-bit and has held the title of the most popular HTML character encoding since 2008. By 2019, more than 90 percent of all websites use UTF-8.
Title Element shows up in Google searches
There are 6 different levels of headings starting from <h1> to <h6>

The nested elements are the children and the element they are nested within is the parent.
The parent, child, and sibling relationships between elements will become much more important later when we start styling our HTML with CSS and adding behavior with JavaScript.

An HTML attribute gives additional information to an HTML element and always goes in the elements opening tag
An attribute is made up of two parts, a name, and a value.

A typical absolute link will be made up of the following parts: protocol://domain/path.
Relative links do not include the domain name, since it is another page on the same site, it assumes the domain name will be the same as the page we created the link on.
Relative links are directions from the room you are currently in (the bedroom) to another room (the kitchen). 
Absolute links on the other hand, are directions to an entirely different house.

JPG images are designed for handling large color palettes without exorbitantly increasing file size.
PNG file type is an excellent fit for icons, technical diagrams, logos, etc.
GIFs are the go-to option for simple animations
SVG is a vector-based graphics format, meaning it can scale up or down to any dimension without loss of quality; SVG images a wonderful tool for responsive design.

about CSS, remember the selector, then property/value pair!
think of CSS as a rule, and the selector selects which HTML element to apply the rules

the asterisk * is a universal selector
a type selector selects by the HTML element type

note that CLASS selectors need not be uniquely applied to an element
there can also be multiple class selectors for a single element. they are separated by a whitespace.
class selectors are identified by a period.

ID selectors are identified by a hashtag
both class and ID selectors are case-sensitive
note that an element can only have ONE ID selector, unlike class selectors
an ID selector cannot be repeated on a single page

a useful tip is to reduce repetition across classes
for example,
.read, .unread {color: white;}
.read { /*...*/ }
.unread { /*...*/ }

learn about CHAINING SELECTORS
this can be thought of as an AND condition
for example,
.subsection.header { color: red;} 
above would apply to an element whose classes includes subsection and header

learn about DESCENDANT COMBINATORS
similarly uses an AND condition
but applied in a hierarchical, parent-child approach
for example,
.subsection .header {color: red;}
above would require the parent element to be of class .subsection, AND the child element to be of class .header
note that the relationship is regardless of depth; the child could be deeply nested and the descendant combinator will apply
there can be more levels of nesting (e.g. .one .two. .three .four etc), and the same parent-child principle applies

common CSS properties to grasp:
(1) color
(2) background-color
these properties accept hex, rgb, hsl values

(3) font-family
use a comma-separated list of values to determine what font an element uses
(4) font-size
(5) font-weight
for the font's boldness with a value from 1 to 1000. 700 is equivalent to setting the weight as 'bold'

(6) img height
(7) img width
use 'auto' height and adjust width to avoid losing proportions
recommended to include both properties, even if no adjustment is needed to the image.
if left unspecified, and the image takes a while to load, then users may experience drastic shifts in page contents once loaded

CSS "Cascade"
know that a browser has DEFAULT styles
a CASCADE determines which rules is applied to the HTML
here are 3 of many:
(1) specificity
A CSS declaration that is more specific will take precedence over ones that are less specific. 
e.g. INLINE styles have the highest specificity, in comparison to SELECTORS
The following order applies: Inline > ID > Class > Type > Universal
think of specificity as a tie-breaker, in event of conflicting styles
also know that more declarations (e.g. descendant combinators) lead to greater specificity; basically, more rules wins

(2) inheritance
refers to certain CSS properties such as typography based properties (e.g. color, font-size, font-family etc)
therefore, even if the parent element applies an ID selector, and the child element applies a CLASS selector, the class selector's property/value pair will take precedence

(3) rule order
this is the final tie-breaker, after all other factors have been considered
this rule states that whichever rule is LAST takes precedence
for example, .warning will take precedence
.alert {
  color: red;
}
.warning {
  color: yellow;
}


*Methods to add CSS to HTML:
(1) External CSS; use <link> for a separate file within <head> elements with 'rel' and 'href' attributes
external CSS is neater with separate files, and editing CSS occurs in one single origin

(2) Internal CSS; use <style> tags within <head> 
useful for applying styles to a single page of a website

(3) Inline CSS; use 'style' as an attribute within the HTML element 
least recommended approach as it bloats the HTML file
applying the same style to multiple elements results in copy-paste code
finally, inline CSS has the highest specificity, and might cause unexpected results


*know that "Web Safe Fonts" are a font list which are generally installed on every computer







